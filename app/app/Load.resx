<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer0.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAkKSkA9f39AAAAAAlBSEgpeH5+UpWa
        mnWmq6uGrLGxiKetrXmcpKRZgYqKLiAwMAv///8Akp2dAAAAAAA4R0cAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABofHwAAAAAA+v//AAMJCRNzeXlVrrKypNHU
        1Njk5ubx7e7u+/Hx8f7y8vL+8PHx/Ozt7fXj5eXg09fXsbm/v2SCjo4a////AIORkQCyvr4ADRERAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9i4sAKjAwAAAAAAZgZmZLs7a2t+Lj
        4/T09fX/+Pf3//f39//29vb/9vb2//b29v/39vb/9/f3//f39//29vb/8PHx/N/i4su/xcVeXG5uCbnC
        wgD///8ASmFhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwtTUAEVMTAAAAAARh4yMftbY
        2On19fX/9/f3//b29v/29vb/9vb2//b29v/59/f/+ff2//Lz8//u8PD/8fLy//f29f/6+Pj/+Pf3/+/w
        8PfV2dmbnqurG9PX1wD///8AWHR0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEVOTgA7QkIAAwgIFZWa
        mpfl5ub5+Pf3//b29v/29vb/9vb2//b29v/49/f/8/T0/8Tc4P9+wM7/U7XL/0m1zf9Wuc7/c77O/6vQ
        1//i6uv/9/f2//T09P/e4eG4qrW1I9DU1AD//v4AVHFxAAAAAAAAAAAAAAAAAAAAAAAHCQkAFhoaAAAA
        AA2Pk5OR5+jo+/f39//29vb/9vb2//b29v/29vb/9/j4/93p6/9sr7z/F5Cq/wCXu/8Dp9H/Erji/x3G
        7v8Owu3/Ca7W/zykvP/S4uX/+Pf3//T19f/d4OC3o7CwGrjAwACrtrYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABd4CBbODj4/X4+Pj/9vb2//b29v/29vb/9vj4//X09P/06Ob/n8zV/wN7k/8AhaL/AZS4/wSk
        zf8Std//IMbu/xjL9v8DwvH/AaTM/5rH0P/6+Pf/9vb2//Pz8//W2tqYcoqKB5ipqQCKrq4AAAAAAAAA
        AABVZmYAbEpAAD4kHTS7i4Lc7tjV//Pu7v/19fX/9vb3//Tz8//v3tz/4ZeO/9hwZ//A1Nn/E4Wb/wCB
        nP8BkbP/A5/I/w6w2v8dwur/Hcv1/wjF8/8Ardn/ZrPE//b19f/29vb/9/b2/+3u7vbEy8tZ+e/vAAA5
        OQAAAAAAAAAAAAEDAwAAAAAHl4eCmep/Y//rhW7/56CU/+atpf/orKT/5pmM/+JyYP/XRzX/zDwy/9rJ
        yf81maz/AH2W/wGNrf8BnMP/CqzW/xm+5/8gyvP/DMf1/wC24/82pb//5uzt//f39//29vb/9vb2/9/h
        4cmcqqoWpLCwAJG8vAAEBQUAZWtrAEdNTTbQ0NDk9Z2F//aDY//1o4z/9KKN//SSef/0gmX/6mtQ/9tP
        PP/MMyf/4Kek/2Wzw/8AepL/AYmo/wGYvv8Hp9H/FLnj/x/J8v8Ryfb/Abzr/xOhw//F29//+fj3//b2
        9v/29vb/7+/v/MPJyWLr5eUA0gAAAAAAAAAAAAAAjJCQfu3w8P/0uKj/9Xxa//Wehf/2qJP/9pmA//aJ
        bP/tclf/31ZB/882KP/ae3X/msvV/wR8lP8AhaL/AJS4/waiy/8nrdD/Q77c/y3I7v8EwfD/GqTG/7DI
        zv/39fX/9vb2//b29v/29vb/19ratm2EhAmNoaEAEhUVAAAAABC3urq99/j5//TTy//0fFr/9pV7//ap
        lf/2nYb/9o1x//B5Xf/jXkf/0z4u/9FTS//E09j/Foed/wCBm/8BkbL/Ap/H/zyqx/+/3OP/QNDz/wjA
        7v+HxdT/x9nc/+3v7//29vb/9vb2//f39//l5ubpp7CwLaiwsABMUlIAQ0hIK9LU1OL4+Pn/9ejl//OG
        aP/2jG//9qiS//aii//2kXb/839i/+ZlTP/XRzX/zDsw/9vFxP85nK//AHyW/wCNrf8AmsP/JqbI/73h
        6/8x0Pb/DMHt/6LT4P99vcv/4Onr//f39//29vb/9/f3/+3u7v26v79cz83NAJednQBrcHBJ4uPj9Pf3
        9//19PT/85yF//aCY//2pI3/9qaQ//aVe//1hGf/6mxS/9tQPP/MMib/36Ge/2q2xf8AeJH/CIyq/ziu
        zP92v9P/1ebr/5Lh9f9j0ez/s9jh/165zv/B2t7/+fj3//b29v/29vb/8vLy/8TIyIT///8A5+zsAIOH
        h1/p6ur79/f3//b5+f/1u6v/+H1b//eehv/3qZT/95qB//eKbf/vc1j/31dC/9E3KP/ZdW//oM3X/zeY
        rP+j0dv/z+Xj/7PMw//Y5N//otPC/6LLvv/Q2tj/wOLq/93q7f/49/f/9vb2//b29v/09PT/yc3NnwAA
        AAH///8AkZaWaO3u7v74+Pj/8PHy/8uwqf/MZkr/4Ihw/+Wfi//plX//2n1k/95wVv/hXUf/vjgp/75O
        Rv/j4eL/zuPk/466q/8whWf/UJl//8jj2v8ytIX/LLKC/7LVyf+VwrP/tczF//X19v/29vb/9vb2//X1
        9f/Lzs6sACYmBP///wCSlpZm7u/v/efn5/9lZWX/HBsb/007Nf9sRjv/UDs1/00yK/8fExD/iU5A/9df
        SP81EQz/X01L//Hv7f9spJP/AS4g/wQSDf83UEf/Z52K/w8iG/89ZFb/xtvT/2x6df9cfHL/5evq//f3
        9//29vb/9fX1/8nMzKsAGRkE2N3dAImOjlnt7u76j4+P/wAAAP9vb2//zdHZ/4KAhP9JPzz/TUA8/wAC
        A/+of3P/26GT/xwWFP8tNEP/vMjh/2J6cv8AAAD/HU09/wuUY/8Fckv/AAAA/xctJf9PYlv/ODU2/yRS
        Qv/D2NL/+fj4//b29v/09PT/w8bGngAAAAGVnJwAeH19P+Hi4vBVVVX/AAAA/5GQjv+nx/j/L2W2/x4i
        J/8dHBz/ExMU/7C3xf+iss//ERMX/w4WMP9keLr/U1NT/wAAAP8RWED/Gp5w/3mfkf8SEBH/HDww/x9l
        S/8NCwz/F1Q+/5K/sP/6+Pn/9vb2//Dw8P+3vLyC////AFdfXwBTWlog1tjY2lhYWP8AAAD/IyIh/1Vl
        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
        AAHAAAADwAAAA+AAAAfwAAAP+AAAH/4AAH8=
</value>
  </data>
</root>